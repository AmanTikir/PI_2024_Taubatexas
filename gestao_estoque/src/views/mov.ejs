<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Formulário de Entrada</title>
    <!-- Bootstrap CSS -->
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
</head>

<body>
    <div class="container my-5">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb breadcrumb-custom overflow-hidden text-center bg-body-tertiary border rounded-3">
                <li class="breadcrumb-item">
                    <a id="goBackButton" class="link-body-emphasis fw-semibold text-decoration-none" href="/">
                        <svg class="bi" width="16" height="16">
                            <use xlink:href="#house-door-fill"></use>
                        </svg>
                        Home
                    </a>
                </li>
            </ol>
        </nav>
    </div>

    <% if(tipo_movimentacao==='entrada' ) {%>
        <div id="entrada" class="container mt-5">
            <h1 class="mb-3">Entrada de Material</h1>
            <form id="formEntrada">
                <div class="form-group">
                    <label for="data">Data:</label>
                    <input type="date" id="data" name="data_movimentacao" class="form-control">
                </div>
                <div class="form-group">
                    <label for="fornecedor">Fornecedor:</label>
                    <input list="fornecedores" id="fornecedor" name="fornecedor_nome" class="form-control"
                        placeholder="Selecione um fornecedor" autocomplete="off">

                    <!-- Datalist para preencher com valores do backend -->
                    <datalist id="fornecedores">
                        <!-- Este campo será preenchido dinamicamente -->
                    </datalist>
                </div>
                <!-- Botão Add sozinho e com tom verde -->

                <button type="button" class="btn btn-success mb-3"
                    onclick="addItens('<%= tipo_movimentacao %>')">Add</button>

                <!-- Botões Enviar e Cancelar mais abaixo -->
                <div class="form-group">
                    <button type="submit" class="btn btn-primary">Enviar</button>
                    <button type="button" class="btn btn-secondary">Cancelar</button>
                </div>
            </form>
        </div>
        <div class="container mt-5">
            <h1>Materiais</h1>
            <table class="table">
                <thead>
                    <tr>
                        <th>Código</th>
                        <th>Descrição</th>
                        <th>Quantidade</th>
                        <th>Unidade de Medida</th>
                    </tr>
                </thead>
                <tbody id="tabela_entrada">
                </tbody>
            </table>
        </div>
        <% }else if(tipo_movimentacao==='saida' ) {%>


            <div id="saida" class="container mt-5">
                <h1 class="mb-3">Saída de Material</h1>
                <form id="formSaida">
                    <div class="form-group">
                        <label for="data">Data:</label>
                        <input type="date" id="data" name="data_movimentacao" class="form-control">
                    </div>
                    <div class="form-group">
                        <label for="usuario">Matrícula Usuário:</label>
                        <input type="text" id="usuario" name="id_usuario" class="form-control"
                            placeholder="Nome do Usuário">
                        <div class="input-group-append">
                            <span class="input-group-text"><a href="/usuarios"><i class="fas fa-search"></i></a></span>
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="robo">Robô Destino:</label>
                        <input type="text" id="robo" name="id_robo" class="form-control"
                            placeholder="Identificação do Robô">
                    </div>
                    <!-- Botão Add sozinho e com tom verde -->
                    <button type="button" class="btn btn-success mb-3"
                        onclick="addItens('<%= tipo_movimentacao %>')">Add</button>

                    <!-- Botões Enviar e Cancelar mais abaixo -->
                    <div class="form-group">
                        <button type="submit" class="btn btn-primary">Enviar</button>
                        <button type="button" class="btn btn-secondary">Cancelar</button>
                    </div>
                </form>
            </div>
            <div class="container mt-5">
                <h1>Materiais</h1>
                <table class="table">
                    <thead>
                        <tr>
                            <th>Código</th>
                            <th>Descrição</th>
                            <th>Quantidade</th>
                            <th>Unidade de Medida</th>
                        </tr>
                    </thead>
                    <tbody id="tabela_saida">
                    </tbody>
                </table>
            </div>
            <%}%>



                <!-- Bootstrap JS e dependências -->


                <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
                <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.3/dist/umd/popper.min.js"></script>
                <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
                <script>


                    window.onload = function () {

                        const tipo_movimentacao = '<%= tipo_movimentacao %>';

                        const storage_key = tipo_movimentacao === 'entrada' ? 'dados_entrada' : 'dados_saida';


                        const itens = JSON.parse(sessionStorage.getItem(storage_key));


                        if (itens) {
                            itens.forEach(dadosItem => {
                                const tableRow = `<tr>
                            <td>${dadosItem.id_material}</td>
                            <td>${dadosItem.descricao_material}</td>
                            <td>${dadosItem.quantidade_material}</td>
                            <td>${dadosItem.unid_medida_material}</td>
                            <td><i class="fas fa-trash" ></i></td>
                            <td><i class="fas fa-pencil-alt"></i></td>

                            </tr>`;


                                if (tipo_movimentacao === 'entrada') {
                                    document.getElementById('tabela_entrada').innerHTML += tableRow;
                                }

                                if (tipo_movimentacao === 'saida') {
                                    document.getElementById('tabela_saida').innerHTML += tableRow;
                                }

                            })

                        }

                        const formEntrada = document.getElementById('formEntrada');
                        const formSaida = document.getElementById('formSaida');



                        if (formEntrada) {
                            formEntrada.addEventListener('submit', function (event) {
                                event.preventDefault()
                                enviarDados('entrada')
                            })
                        }

                        if (formSaida) {
                            formSaida, addEventListener('submit', function (event) {
                                event.preventDefault()
                                enviarDados('saida')
                            })
                        }
                    }


                    function addItens(tipo_movimentacao) {
                        // Redireciona para a URL de adicionar itens à movimentação, com o tipo especificado
                        window.location.href = `/movimentacoes/${tipo_movimentacao}/itens_movimentacao`;

                    }


                    function dadosArmazenados(tipo_movimentacao) {

                        const storage_key = tipo_movimentacao === 'entrada' ? 'dados_entrada' : 'dados_saida';

                        // Recuperar os dados do sessionStorage
                        const dadosSalvos = sessionStorage.getItem(storage_key);

                        const dadosParaEnvio = JSON.parse(dadosSalvos);


                        const dadosFormatados = dadosParaEnvio.map(item => ({
                            id_material: item.id_material,
                            quantidade_material: item.quantidade_material
                        }));


                        if (tipo_movimentacao === 'entrada') {
                            const formEntrada = document.getElementById('formEntrada');
                            return {
                                data_movimentacao: formEntrada.data_movimentacao.value,
                                id_fornecedor: formEntrada.id_fornecedor.value,
                                itens_movimentacao: dadosFormatados
                            };

                        } else if (tipo_movimentacao === 'saida') {
                            const formSaida = document.getElementById('formSaida');
                            return {
                                data_movimentacao: formSaida.data_movimentacao.value,
                                id_usuario: formSaida.id_usuario.value,
                                id_robo: formSaida.id_robo.value,
                                itens_movimentacao: dadosFormatados

                            };

                        }


                        // Mapear os dados para o formato esperado pelo backend



                    }

                    function enviarDados(tipo_movimentacao) {
                        // Enviar os dados coletados para o backend

                        const storage_key = tipo_movimentacao === 'entrada' ? 'dados_entrada' : 'dados_saida';

                        const dados = dadosArmazenados(tipo_movimentacao)



                        fetch(`/movimentacoes/${tipo_movimentacao}`, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },

                            body: JSON.stringify(dados)
                        })
                            .then(response => {
                                if (!response.ok) {
                                    throw new Error('Network response was not ok');
                                }
                                return response.json();
                            })
                            .then(data => {
                                // Limpar o `sessionStorage` após o envio bem-sucedido
                                sessionStorage.removeItem(storage_key);

                                limparTabela(tipo_movimentacao);


                                // Exibir uma mensagem ao usuário, extraída do `data`
                                if (data.message) {
                                    alert(data.message); // Ou use SweetAlert para mensagens mais sofisticadas
                                } else {
                                    alert('Dados enviados com sucesso!');
                                }
                            })
                            .catch(error => {
                                console.error("Erro ao enviar dados:", error);
                                alert('Houve um erro ao enviar os dados. Por favor, tente novamente.');
                            });

                    }

                    function limparTabela(tipo_movimentacao) {
                        const tabela_id = tipo_movimentacao === 'entrada' ? 'tabela_entrada' : 'tabela_saida';
                        const tabela = document.getElementById(tabela_id);
                        if (tabela) {
                            tabela.innerHTML = ''; // Limpar a tabela
                        }
                    }

                </script>
</body>

</html>